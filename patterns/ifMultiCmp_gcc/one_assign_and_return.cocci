@one_assign_and_return@
//  ifMultiCmp_gcc
expression l, e, retVal;
assignment operator op;
global idexpression cond =~ "[a-z]", g;
statement s;
@@
(
if ( <+... 
*   cond ...+> ){
    ...
(   *l = ...    \|  g = ...
)
    ...
}else{
    ...
(   *l = ...    \|  g = ...
)
    ...
*   return retVal;
}

|

(   
*   *l = ...   
|  
*   g = ...
)
...
if ( <+... 
*   cond ...+> ){
    ...
    return retVal;
    ...
}
...
(   
*   *l = ...   
|  
*   g = ...
)

|
//107
(   *l = ...    \|  g = ...
)
...
if ( <+... 
*   cond ...+> ){
    ...
(   *l = ...    \|  g = ...
)
    ...
*   return retVal;
    ...
}

|
//2448
(   *l = ... ;   \|  g = ...;
)
?   s
if (<+... 
*   cond ...+> ){
    ...
(   *l = ...    \|  g = ...
)
    ...
}else{
    ...
    return retVal;
    ...
}

)

@script:python@
cond << one_assign_and_return.cond;
l << one_assign_and_return.l;
g << one_assign_and_return.g;
@@
print "cond: "+cond
print "l: "+l
print "g: "+g
print ""